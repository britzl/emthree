local emthree = require "emthree.emthree"
local effects = require "emthree.effects"

local blocksize = 80		-- Distance between block centers
local boardwidth = 6		-- Number of columns
local boardheight = 10		-- Number of rows

local colors = {
	hash("brickBlue06"),
	hash("brickGreen05"),
	hash("brickRed04"),
	hash("brickWhite05"),
	hash("brickYellow03"),
}

--[[local color_lookup = {
	[hash("brickBlue06")] = "blue",
	[hash("brickGreen05")] = "green",
	[hash("brickRed04")] = "red",
	[hash("brickWhite05")] = "white",
	[hash("brickYellow03")] = "yellow",
}--]]

local function create_block(board, position, type, color)
	if not type and not color then
		color = color or colors[math.random(#colors)]
	end
	local id = factory.create("#factory", position, null, { color = color, type = type })
	msg.post(id, "set_parent", { parent_id = go.get_id(), keep_world_transform = 0 })
	return id, color, type
end

local function create_spawner(board, position, type)
	position.z = 1
	local id = factory.create("#factory", position, null, { type = type, color = hash("brickGrey") })
	msg.post(id, "set_parent", { parent_id = go.get_id(), keep_world_transform = 0 })
	return id, type
end

local function create_blocker(board, position, type)
	position.z = 1
	local id = factory.create("#factory", position, null, { type = type, color = hash("brickSpecial06") })
	msg.post(id, "set_parent", { parent_id = go.get_id(), keep_world_transform = 0 })
	return id, type
end

function init(self)
	self.board = emthree.create_board(boardwidth, boardheight, blocksize, { direction = emthree.COLLAPSE_DOWN })
	emthree.on_create_block(self.board, create_block)
	emthree.on_create_spawner(self.board, create_spawner)
	emthree.on_create_blocker(self.board, create_blocker)
	emthree.on_no_possible_switches(self.board, function() emthree.shuffle(self.board) end)
	
	for x=0,boardwidth-1 do
		emthree.create_spawner(self.board, x, boardheight - 1, hash("SPAWNER"))
	end
	emthree.fill_board(self.board)

	--[[self.debug = {}
	for x=0,boardwidth-1 do
		self.debug[x] = {}
		for y=0,boardheight-1 do
			local pos = go.get_position() + vmath.vector3((blocksize / 2) + (blocksize * x), (blocksize / 2) + (blocksize * y), 1)
			self.debug[x][y] = msg.url(nil, factory.create("#debugfactory", pos), "label")
		end
	end--]]

	emthree.stabilize(self.board, function()
		msg.post(".", "acquire_input_focus")
	end)
end


--[[function update(self, dt)
	for x=0,boardwidth-1 do
		for y=0,boardheight-1 do
			local block = self.board.slots[x][y]
			if not block then
				label.set_text(self.debug[x][y], "EMPTY")
			elseif block.blocker then
				label.set_text(self.debug[x][y], "BLOCKER")
			elseif block.spawner then
				label.set_text(self.debug[x][y], "SPAWNER")
			else
				label.set_text(self.debug[x][y], color_lookup[block.color] or "?")
			end
		end
	end
end--]]

function on_input(self, action_id, action)
	if action_id == hash("touch") and (action.pressed or action.released) then
		return emthree.on_input(self.board, action)
	end
end
